import yargs from 'yargs';
export declare const command = "login";
export declare const describe = "log in to SIMBAChain SCaaS";
export declare const builder: {
    interactive: {
        string: boolean;
        type: string;
        describe: string;
        default: boolean;
    };
    org: {
        string: boolean;
        type: string;
        describe: string;
    };
    app: {
        string: boolean;
        type: string;
        describe: string;
    };
};
/**
 * command for user to login (acquire auth token, and choose org and app from blocks)
 * @param args
 * args:
 * args.interactive
 * args.org
 * args.app
 * @returns
 */
export declare const handler: (args: yargs.Arguments) => Promise<any>;
/**
 * command for user to login (acquire auth token, and choose org and app from blocks)
 * @param interactive - if true, then choose org and app from prompts
 * Also, if true, auth token will be generated through device login flow
 * If false, auth token will be generated through client creds flow,
 * so SIMBA_AUTH_CLIENT_ID and SIMBA_AUTH_CLIENT_SECRET need to be present
 * in .simbachain.env, simbachain.env, or .env in project root or SIMBA_HOME
 * @param org - if interactive is false, org must be specified, or be present in simba.json
 * @param app - if interactive is false, app must be specified or be present in simba.json
 * @returns
 */
export declare function login(interactive?: boolean | unknown, org?: string | unknown, app?: string | unknown): Promise<Error | undefined>;
//# sourceMappingURL=login.d.ts.map