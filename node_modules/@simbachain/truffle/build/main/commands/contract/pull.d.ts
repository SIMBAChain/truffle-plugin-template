import yargs from 'yargs';
export declare const command = "pull";
export declare const describe = "pull contract from Blocks and sync in your local project";
export declare const builder: {
    id: {
        string: boolean;
        type: string;
        describe: string;
    };
    contractname: {
        string: boolean;
        type: string;
        describe: string;
    };
    pullsourcecode: {
        string: boolean;
        type: string;
        describe: string;
        default: boolean;
    };
    pullsolfiles: {
        string: boolean;
        type: string;
        describe: string;
        default: boolean;
    };
    interactive: {
        string: boolean;
        type: string;
        describe: string;
        default: boolean;
    };
    usesimbapath: {
        string: boolean;
        type: string;
        describe: string;
        default: boolean;
    };
};
/**
 * for syncing contractX from your org in simbachain.com with contractX in your project
 * @param args
 * args:
 * args.designID
 * args.contractName
 * args.pullSourceCode
 * args.pullSolFiles
 * args.interactive
 * args.useSimbaPath
 * @returns
 */
export declare const handler: (args: yargs.Arguments) => Promise<any>;
/**
 * when pulling your contracts from your blocks organisation, you can "pull" them
 * into two locations: your local contracts folder (or contracts/simbaimports), and/or
 * your simba.json
 *
 * pulling makes sure that, when working with teams, everyone is working
 * with the most recent versions of contracts that have been exported to blocks
 * @param designID
 * @param contractName
 * @param pullSourceCode - pull source code to your simba.json
 * @param pullSolFiles - pull .sol files to your contracts or contracts/simbaimports directory
 * @param interactive
 * @param useSimbaPath - pull to contracts/simbaimports
 * @returns
 */
export declare function pull(designID?: string | unknown, contractName?: string | unknown, pullSourceCode?: boolean | unknown, pullSolFiles?: boolean | unknown, interactive?: boolean | unknown, useSimbaPath?: boolean | unknown): Promise<any>;
//# sourceMappingURL=pull.d.ts.map